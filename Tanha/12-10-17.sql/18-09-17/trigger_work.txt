#create trigger:

create or replace trigger display_age
before update on student
for each row
begin
dbms_output.put_line('new age:'||:new.age);
dbms_output.put_line('old age:'||:old.age);
end;
/

update student
set age = 30
where student_id = 1;



///insert ////\

 create or replace trigger display_age_change
 before insert on student
 for each row
 when (new.student_id >0)
 declare
 age_diff number;
 begin
 age_diff := : new.age - :old.salary;
 dbms_output.put_line('old age:'||old.age);
 dbms_output.put_line('new age:'||new.age);
 dbms_output.put_line('ag differencee:'||age_diff);
 end;
 /

//again ///

 create table round(round_id number(5) primary key,round_name varchar2(50));

 create table student(student_id number(5) primary key,student_name varchar2(50),age number(10),round_id number(5),
constraint st_fk_rd foreign key (round_id) references round(round_id)); 
create sequence round_seq start with 100 increment by 10 nocache nocycle;
insert into round values(round_seq.nextval,'c++');
insert into round values(round_seq.nextval,'wps');

//
create or replace trigger student_after_insert
after insert on student
for each row
begin
dbms_output.put_line('inserteed');
end;
/

create or replace trigger student_after_update
after update on student
for each row
begin
dbms_output.put_line('updateeed');
end;
/

//

create or replace trigger student_after_delete
after delete on student
for each row
begin
dbms_output.put_line('deleteeeed');
end;
/

insert into student values(10,'rumi',25,100);

insert into student values(20,'youns',25,110);

 update student set student_id=11 where student_id=20;

create view student_v as
  select * from student;


create synonym st_view for student_v;

SQL> create or replace trigger display_age
  2  after update on student
  3  for each row
  4  begin
  5  dbms_output.put_line('new age:'||:new.age);
  6  dbms_output.put_line('old age:'||:old.age);
  7  end;
  8  /

update student
set age=30
where student_id=10

